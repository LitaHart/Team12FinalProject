/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.64
 * Generated at: 2022-09-07 11:00:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views._1Team;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class t1_005fhome_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<link rel=\"stylesheet\" href=\"resources/css/index.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"https://unpkg.com/aos@next/dist/aos.css\"> \n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css\"/>\n");
      out.write("<script src=\"https://unpkg.com/aos@next/dist/aos.js\"></script> \n");
      out.write("<script src=\"jquery.js\"></script>\n");
      out.write("<script>\n");
      out.write("	var words = [ 'WE NEED FAMILY' ], part, i = 0, offset = 0, len = words.length, forwards = true, skip_count = 0, skip_delay = 15, speed = 100;\n");
      out.write("	var wordflick = function() {\n");
      out.write("		setInterval(function() {\n");
      out.write("			if (forwards) {\n");
      out.write("				if (offset >= words[i].length) {\n");
      out.write("					++skip_count;\n");
      out.write("					if (skip_count == skip_delay) {\n");
      out.write("						forwards = false;\n");
      out.write("						skip_count = 0;\n");
      out.write("					}\n");
      out.write("				}\n");
      out.write("			} else {\n");
      out.write("				if (offset == 0) {\n");
      out.write("					forwards = true;\n");
      out.write("					i++;\n");
      out.write("					offset = 0;\n");
      out.write("					if (i >= len) {\n");
      out.write("						i = 0;\n");
      out.write("					}\n");
      out.write("				}\n");
      out.write("			}\n");
      out.write("			part = words[i].substr(0, offset);\n");
      out.write("			if (skip_count == 0) {\n");
      out.write("				if (forwards) {\n");
      out.write("					offset++;\n");
      out.write("				} else {\n");
      out.write("					offset--;\n");
      out.write("				}\n");
      out.write("			}\n");
      out.write("			$('.word').text(part);\n");
      out.write("		}, speed);\n");
      out.write("	};\n");
      out.write("\n");
      out.write("	$(document).ready(function() {\n");
      out.write("		wordflick();\n");
      out.write("	});\n");
      out.write("</script>\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("   <!-- home -->\n");
      out.write("    <!-- main -->\n");
      out.write("    <div id=\"main_wrapper\">\n");
      out.write("            <img class=\"main_img\" src=\"resources/img/home.jpg\">\n");
      out.write("            <h2 class=\"main_txt\">\n");
      out.write("                <div class=\"message\">\n");
      out.write("                    <div class=\"word\">\n");
      out.write("                        <span>WE NEED FAMILY</span>    \n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </h2>\n");
      out.write("            <p class=\"main_txt_p\">사지 말고, 입양하세요.</p>\n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("        \n");
      out.write("        <!-- contents -->\n");
      out.write("        \n");
      out.write("        <div class=\"content_msg\">DO YOU KNOW THAT?</div>\n");
      out.write("\n");
      out.write("        <div id=\"contents\">\n");
      out.write("\n");
      out.write("            \n");
      out.write("\n");
      out.write("\n");
      out.write("            <div class=\"main_page_wrapper\">\n");
      out.write("                    <img class=\"main_page_img\" src=\"resources/img/mainP2.jpg\"\n");
      out.write("                    data-aos=\"zoom-out-left\" data-aos-duration=\"1500\"\n");
      out.write("                    data-aos-offset=\"500\">\n");
      out.write("                    <h2 id=\"blur\" class=\"main_page_txt\" >Abandoned<br>Dog</h2>\n");
      out.write("                    <span id=\"blur\" class=\"main_page_p\">\n");
      out.write("                        <br>\n");
      out.write("                        하루 버려지는 유기견<br>\n");
      out.write("                        평균 <span style=\"font-size: 20pt; text-decoration: underline;\">\n");
      out.write("                        250</span> 마리<br>\n");
      out.write("                        2021년 총<span style=\"font-size: 20pt; text-decoration: underline;\">\n");
      out.write("                        84136</span> 마리\n");
      out.write("                    </span>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <script> \n");
      out.write("                    AOS.init(5000); // 자바스크립트로 init()을 해야 동작한다.\n");
      out.write("                </script>\n");
      out.write("        <div class=\"main_page2\">\n");
      out.write("            <div class=\"main_page_wrapper2\">\n");
      out.write("                <img class=\"main_page_img2\" src=\"resources/img/mainP.jpg\"\n");
      out.write("                data-aos=\"zoom-out-right\" data-aos-duration=\"1500\"\n");
      out.write("            data-aos-offset=\"400\">\n");
      out.write("                <h2 id=\"blur\" class=\"main_page_txt2\">Euthanasia of <br> Dog</h2>\n");
      out.write("                <p id=\"blur\" class=\"main_page_p2\">\n");
      out.write("                    <br>\n");
      out.write("                    - 연간 유기견 안락사 통계 -<br>\n");
      out.write("                    2017년 5400마리<br>\n");
      out.write("                    2018년 6508마리<br>\n");
      out.write("                    2019년 7703마리<br>\n");
      out.write("                    .<br>\n");
      out.write("                    .<br>\n");
      out.write("                </p>\n");
      out.write("        </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"main_page3\">\n");
      out.write("            <div class=\"main_page_wrapper3\">\n");
      out.write("                <div class=\"main_page_txt3\">\n");
      out.write("                    <span class=\"txt_word Every\">Every</span>\n");
      out.write("                    <span class=\"txt_word Dog\">Dog</span>\n");
      out.write("                    <span class=\"txt_word Deserves\">Deserves</span>\n");
      out.write("                    <span class=\"txt_word The\">The</span>\n");
      out.write("                    <span class=\"txt_word Best\">Best</span>\n");
      out.write("                <!--   Every Dog Deserves The Best &nbsp;\n");
      out.write("                    Every Dog Deserves The Best &nbsp;\n");
      out.write("                    Every Dog Deserves The Best &nbsp; -->\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"meet_dog_wrapper\" style=\"font-size: 100pt;\">\n");
      out.write("            Content\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

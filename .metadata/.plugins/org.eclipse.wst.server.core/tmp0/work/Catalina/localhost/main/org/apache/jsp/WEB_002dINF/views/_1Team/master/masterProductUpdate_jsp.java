/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.64
 * Generated at: 2022-09-07 11:02:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views._1Team.master;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class masterProductUpdate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>mater 상품등록 페이지</title>\n");
      out.write("<script src=\"http://madalla.kr/js/jquery-1.8.3.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("        //----썸네일 미리보기---- \n");
      out.write("       /*  $(function() {\n");
      out.write("            $(\"#productImg\").on('change', function(){\n");
      out.write("            readURL(this);\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("        function readURL(input) {\n");
      out.write("            if (input.files && input.files[0]) {\n");
      out.write("                var reader = new FileReader();\n");
      out.write("                reader.onload = function (e) {\n");
      out.write("                $('#view').attr('src', e.target.result);\n");
      out.write("                }\n");
      out.write("                reader.readAsDataURL(input.files[0]);\n");
      out.write("            }\n");
      out.write("        } */\n");
      out.write("</script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("	$(document).ready(function() {\n");
      out.write("		$(\"#addBtn\").click(function() {\n");
      out.write("			var product_category = $(\"#product_category\").val();\n");
      out.write("			var product_title = $(\"#product_title\").val();\n");
      out.write("			var product_price = $(\"#product_price\").val();\n");
      out.write("			var product_stock = $(\"#product_stock\").val();\n");
      out.write("			var product_thumnail = $(\"product_thumnail\").val();\n");
      out.write("			\n");
      out.write("			if (product_title == \"\") {\n");
      out.write("				alert(\"상품명을 입력해주세요\")\n");
      out.write("				product_title.focus();\n");
      out.write("			} else if (product_price == \"\") {\n");
      out.write("				alert(\"상품가격을 입력해주세요\")\n");
      out.write("				product_price.focus();\n");
      out.write("			} else if (product_stock == \"\") {\n");
      out.write("				alert(\"상품 수량을 입력해주세요\")\n");
      out.write("				product_stock.focus();\n");
      out.write("			} else if (product_stock ==\"\") {\n");
      out.write("				alert(\"상품 이미지를 등록해주세요\")\n");
      out.write("				product_stock.focus();\n");
      out.write("			} else if (product_category == \"\") {\n");
      out.write("				alert(\"상품 카테고리를 선택해주세요\")\n");
      out.write("				product_category.focus();\n");
      out.write("			}\n");
      out.write("			// 상품 정보 전송\n");
      out.write("			// 상품 등록 버튼 클릭 이벤트 발생시 폼 안의 유효성 검사 후 서버로 전송\n");
      out.write("			document.master_update_form.action = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/enter.team1StoreForDog\"\n");
      out.write("			document.master_update_form.submit();\n");
      out.write("		});\n");
      out.write("	});\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <div class=\"master_product_update_wrap\">\n");
      out.write("            <h2>STORE 상품 등록</h2>\n");
      out.write("            <form action=\"master.create\" id=\"master_update_form\" enctype=\"multipart/form-data\" method=\"POST\">\n");
      out.write("			<div class=\"master_product_update_tbl\">\n");
      out.write("				<div>\n");
      out.write("					<h3>카테고리</h3>\n");
      out.write("					<select name=\"product_category\" id=\"master_category\">\n");
      out.write("						<option>----Select----</option>\n");
      out.write("						<option value=\"dog\">Dog</option>\n");
      out.write("						<option value=\"cat\">Cat</option>\n");
      out.write("					</select>\n");
      out.write("				</div>\n");
      out.write("				<div>\n");
      out.write("					<h3>상품분류</h3>\n");
      out.write("					<select name=\"product_sub_category\" id=\"master_category\">\n");
      out.write("						<option>----Select----</option>\n");
      out.write("						<option value=\"food\">food</option>\n");
      out.write("						<option value=\"product\">product</option>\n");
      out.write("					</select>\n");
      out.write("				</div>\n");
      out.write("				\n");
      out.write("				\n");
      out.write("				<div>\n");
      out.write("					<h3>상품사진</h3>\n");
      out.write("					<input class=\"master_product_update_img_select\" type=\"file\"\n");
      out.write("						name=\"product_thumnail\" id=\"productImg\"> <br> <img\n");
      out.write("						id=\"view\" src=\"\" alt=\"product Img\">\n");
      out.write("				</div>\n");
      out.write("				<div>\n");
      out.write("					<h3>상품디테일사진</h3>\n");
      out.write("					<input class=\"master_product_update_img_select\" type=\"file\"\n");
      out.write("						name=\"product_detail\" id=\"productImg\" multiple=\"multiple\">\n");
      out.write("				</div>\n");
      out.write("				<div>\n");
      out.write("					<span>상품명1</span> <input type=\"text\" name=\"product_title\"\n");
      out.write("						id=\"product_title\">\n");
      out.write("				</div>\n");
      out.write("				<div>\n");
      out.write("					<span>상품명2</span> <input type=\"text\" name=\"product_title2\"\n");
      out.write("						id=\"product_title2\">\n");
      out.write("				</div>\n");
      out.write("				<br>\n");
      out.write("				<div>\n");
      out.write("					<span>상품가격1</span> <input type=\"text\" name=\"product_price\"\n");
      out.write("						id=\"product_price\">\n");
      out.write("				</div>\n");
      out.write("				<div>\n");
      out.write("					<span>상품수량</span> <input type=\"text\" name=\"product_stock\"\n");
      out.write("						id=\"product_stock\">\n");
      out.write("				</div>\n");
      out.write("				<br>\n");
      out.write("				<div>\n");
      out.write("					<span>상품설명<textarea id=\"product_info\" name=\"product_info\" rows=\"4\" cols=\"50\"></textarea></span>\n");
      out.write("				</div>\n");
      out.write("				<div>\n");
      out.write("					<span>제조사</span> <input type=\"text\" name=\"product_manufactor\"\n");
      out.write("						id=\"product_manufactor\" placeholder=\"상품가격 2 옵션(kg)\">\n");
      out.write("				</div>\n");
      out.write("				<br> \n");
      out.write("				<button	class=\"master_product_update_btn\">등록</button>\n");
      out.write("			</div>\n");
      out.write("		</form>\n");
      out.write("    </div>\n");
      out.write("    \n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

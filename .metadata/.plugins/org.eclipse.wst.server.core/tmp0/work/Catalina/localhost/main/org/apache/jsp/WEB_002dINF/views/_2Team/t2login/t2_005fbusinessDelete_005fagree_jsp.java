/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.63
 * Generated at: 2022-09-01 08:08:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views._2Team.t2login;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class t2_005fbusinessDelete_005fagree_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"memberDeleteAgree-outline\">\r\n");
      out.write("<h1>회원 탈퇴 동의서</h1>\r\n");
      out.write("<h4>-비즈니스-</h4><br>\r\n");
      out.write("</div>\r\n");
      out.write("<span class=\"memberDeleteAgree-text\">회원님 '산책가자' 서비스를 이용하시는 데, 불편함이 있으셨나요?</span><br>\r\n");
      out.write("<span class=\"memberDeleteAgree-text\">이용 불편 및 각종 문의 사항은 아래 적힌 고객센터로 문의 주시면 성심 성의껏 답변드리겠습니다.</span><br>\r\n");
      out.write("<span class=\"memberDeleteAgree-text\">전화문의:010-1234-1234 /이메일 문의 go_outFor_a_walk@naver.com</span><br><br>\r\n");
      out.write("\r\n");
      out.write("<div class=\"memberDeleteAgree-outline2\">\r\n");
      out.write("<textarea rows=\"15\" cols=\"120\">\r\n");
      out.write("회원 탈퇴전, 유의사항을 확인해 주시기 바랍니다.\r\n");
      out.write("-회원탈퇴 시 회원전용 웹 서비스 이용이 불가합니다.\r\n");
      out.write("-거래정보가 있는 경우, 전자상 거래 등에서의 소비자 보호에 관한 법률에 따라 계약 또는 철회에 관한 기록, 대금결제 및 재화 등의 공급에 관한 기록은 5년동안 보존이 됩니다.\r\n");
      out.write("-유효기간이 경과되지 않은 미사용 쿠폰관련 정보는 탈퇴시 삭제됩니다.\r\n");
      out.write("-재가입(회원탈퇴 후 신규가입)하시면 신규회원 대상 이벤트(할인쿠폰 증정,경품증정 등)에 응모되지 않습니다.\r\n");
      out.write("-회원 탈퇴 후 '산책가자'서비스에 입력하신 상품문의 및 후기, 게시글,댓글은 삭제되지 않으며, 회원정보 삭제로 인해 작성자 본인을 확인할 수 없어 편집 및 삭제처리가 원칙적으로 불가능합니다.\r\n");
      out.write("-상품문의 및 후기,게시글, 댓글 등 삭제를 원하시는 경우, 먼저 해당 게시물을 삭제하신 후 탈퇴를 신청하시기를 바랍니다.\r\n");
      out.write("-이미 결제가 완료된 건은 탈퇴로 취소되지 않습니다.\r\n");
      out.write("-회원 탈퇴 후 환불 교환 문의는 고객센터로 문의해주셔야합니다.\r\n");
      out.write("-회원 탈퇴 후 회원정보는 2개월동안 보관 후 삭제됩니다.\r\n");
      out.write("-탈퇴 후 동일한 계정으로 2개월 내 재가입 불가합니다. 2개월 이후 재가입을 하셔도 전에 작성하신 상품문의 및 후기,게시글,댓글 등은 연동되지 않습니다.\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" 저희는 회원님이 다시 돌아오실 그 날까지 더욱 좋은 서비스를 제공할 수 있도록 최선을 다하겠습니다.\r\n");
      out.write(" 언제나 저희 '산책가자'서비스를 사용해주셔서 감사합니다\r\n");
      out.write("</textarea>\r\n");
      out.write("<br><br>\r\n");
      out.write("<label for=\"agree\">\r\n");
      out.write("<input type=\"checkbox\" id=\"agree\" onchange=\"deleteAgree2()\">위의 내용을 읽었으며, 내용에 동의합니다.\r\n");
      out.write("</label><br>\r\n");
      out.write("<form action=\"businessDelte.DO\">\r\n");
      out.write("\r\n");
      out.write("<button id=\"member_Deletebtn\" disabled=\"disabled\">탈 퇴 하 기</button>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function deleteAgree2() {\r\n");
      out.write("	let btn = document.getElementById('member_Deletebtn');\r\n");
      out.write("	let a= btn.disabled;\r\n");
      out.write("	\r\n");
      out.write("	if (a) {\r\n");
      out.write("		btn.disabled = false;\r\n");
      out.write("	}else {\r\n");
      out.write("		btn.disabled = true;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
